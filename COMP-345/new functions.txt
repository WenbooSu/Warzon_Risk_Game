Map.h/.cpp

vector<vector<Territory>> Map::getMatrix() {
    return this->matrix;
}



MapLoader.h.cpp

Map* MapLoader::getMap() {
    return &this->map;
}

Player.h/.cpp

//NEW MEMBERS
PlayerStrategy* ps; //NEW
Map* THE_GAME_MAP; //NEW
vector<int> armies_record; //NEW, to determine being attacked or not

Player::Player(std::string name, Map * map, playerHand * hand, OrdersList *ordersList) {
    this->name=name;
    this->THE_GAME_MAP = map;
    this->hand = hand;
    this->orderList = orderList;
    this->armies = 0;
}

void Player::setPlayerStrategy(PlayerStrategy* psp) {
    //delete this->ps;
    this->ps = psp;
}

Map* :: Player::getMap() {
    return this->THE_GAME_MAP;
}

bool Player::beingAttacked() {
    int current = this->armies_record[this->armies_record.size()-1];
    int last = this->armies_record[this->armies_record.size()-2];
    if(current < last)
    {
        return true;
    }
    else
    {
        return false;
    }
}


